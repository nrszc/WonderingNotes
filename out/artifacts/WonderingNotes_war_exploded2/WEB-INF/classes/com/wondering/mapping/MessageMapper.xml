<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wondering.dao.MessageMapper">
  <resultMap id="BaseResultMap" type="com.wondering.pojo.Message">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="from_user_id" jdbcType="INTEGER" property="from_user_id" />
    <result column="to_user_id" jdbcType="INTEGER" property="to_user_id" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="isread" jdbcType="TINYINT" property="isread" />
  </resultMap>
  <sql id="Base_Column_List">
    id, create_time, from_user_id, to_user_id, content, isread
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_message
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tbl_message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.wondering.pojo.Message">
    insert into tbl_message (id, create_time, from_user_id, 
      to_user_id, content, isread
      )
    values (#{id,jdbcType=INTEGER}, #{create_time,jdbcType=TIMESTAMP}, #{from_user_id,jdbcType=INTEGER}, 
      #{to_user_id,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{isread,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wondering.pojo.Message">
    insert into tbl_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="from_user_id != null">
        from_user_id,
      </if>
      <if test="to_user_id != null">
        to_user_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="isread != null">
        isread,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="from_user_id != null">
        #{from_user_id,jdbcType=INTEGER},
      </if>
      <if test="to_user_id != null">
        #{to_user_id,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="isread != null">
        #{isread,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wondering.pojo.Message">
    update tbl_message
    <set>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="from_user_id != null">
        from_user_id = #{from_user_id,jdbcType=INTEGER},
      </if>
      <if test="to_user_id != null">
        to_user_id = #{to_user_id,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="isread != null">
        isread = #{isread,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wondering.pojo.Message">
    update tbl_message
    set create_time = #{create_time,jdbcType=TIMESTAMP},
      from_user_id = #{from_user_id,jdbcType=INTEGER},
      to_user_id = #{to_user_id,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      isread = #{isread,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--获取用户聊天列表数据-->
  <select id="getMessage" resultType="com.wondering.vo.MessageVO">
    select a.id, a.content, DATE_FORMAT(a.create_time,'%Y-%m-%d') as create_time, b.id as user_id, b.nickname, b.avatar,b.sex
    from tbl_message a, tbl_user b,
    (select b.id, max(a.create_time) create_time
    from tbl_message a,tbl_user b
    where (a.from_user_id = #{user_id} and a.to_user_id = b.id) or (a.to_user_id = #{user_id} and a.from_user_id = b.id)
    GROUP BY b.id) c
    where ((a.from_user_id = #{user_id} and a.to_user_id = b.id) or (a.to_user_id = #{user_id} and a.from_user_id = b.id)) and b.id = c.id and a.create_time=c.create_time
    ORDER BY a.create_time desc
  </select>

  <!--获取聊天数据-->
  <select id="getMessage" resultType="com.wondering.vo.MessageVO">
   select *
   from tbl_message
   where (from_user_id = #{user_id1} and to_user_id = #{user_id}) or (from_user_id = #{user_id} and to_user_id = #{user_id1})
   ORDER BY create_time
  </select>

  <update id="updateMessage">
    update tbl_message
    set status = 1
    where (from_user_id = #{user_id1} and to_user_id = #{user_id}) or (from_user_id = #{user_id} and to_user_id = #{user_id1})
  </update>
</mapper>